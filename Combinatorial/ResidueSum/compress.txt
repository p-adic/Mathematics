#ifdef DEBUG
  #include "c:/Users/user/Documents/Programming/Mathematics/Combinatorial/ResidueSum/a_Body.hpp"
#else
TE <TY INT>INT RoundDownSqrt(CO INT& n){AS(n >= 0);if(n <= 1){RE n;}INT l = 1,r = n;WH(l < r - 1){CO INT m =(l + r)>> 1;(m <= n / m?l:r)= m;}RE l;}TE <TY INT>INT RoundUpSqrt(CO INT& n){AS(n >= 0);if(n <= 2){RE n;}CO INT n_minus = n - 1;INT l = 1,r = n;WH(l + 1 < r){CO INT m =(l + r)>> 1;(m <= n_minus / m?l:r)= m;}RE r;}

TE <TY T> IN T Square(CO T& t){RE t * t;}TE <TY T,TY UINT>T PW(T t,UINT EX){T AN =(EX & 1)== 1?t:1;EX >>= 1;WH(EX > 0){t = Square(t);(EX & 1)== 1?AN *= t:AN;EX >>= 1;}RE AN;}TE <TY T,TY UINT>T PW(T t,UINT EX,T init){(EX & 1)== 1?init *= t:init;EX >>= 1;WH(EX > 0){t = Square(t);(EX & 1)== 1?init *= t:init;EX >>= 1;}RE MO(init);}

TE <TY INT,TY RET>VE<RET> DivisorSum(CO INT& n,CO INT& m,CRI EX = 1){AS(EX >= 0);VE<RET> AN(n + 1);CO INT d_max = min(n,m);for(INT d = 1;d <= d_max;d++){CO RET pw = PW(d,EX);for(int i = d;i <= n;i += d){AN[i]+= pw;}}RE AN;}

TE <TY INT,TY RET>RET ResidueSum(CO INT& n,CO INT& m){INT r = RoundDownSqrt(n);RET AN{};for(INT i = 1;i <= r;i++){INT j_llim = min(n /(i + 1),m),j_max = min(n / i,m);RET d = j_max - j_llim;AN += n * d -(j_max + j_llim + 1)* d / 2 * i;}if(n < m){AN +=(m - n)* RET(n);}r = min(n /(r + 1),m);for(INT j = 1;j <= r;j++){AN += n % j;}RE AN;}TE <TY INT,TY RET>VE<RET> TotalResidueSum(CO INT& n,CO INT& m){VE<RET> AN(n + 1),sigma = DivisorSum<INT,RET>(n,m);RET temp{};for(int i = 1;i <= n;i++){AN[i]= temp += m - sigma[i];}RE AN;}
#endif


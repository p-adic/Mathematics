#ifdef DEBUG
  #include "c:/Users/user/Documents/Programming/Mathematics/SetTheory/DirectProduct/AffineSpace/BIT/TwoDimensional/Dynamic/a_Body.hpp"
#else
TE <TY U,TY ABELIAN_GROUP>CL AbstractTwoDimensionalDynamicBIT{PU:ABELIAN_GROUP m_M;ll m_X;ll m_Y;Map<ll,Map<ll,U>> m_fenwick;IN AbstractTwoDimensionalDynamicBIT(ABELIAN_GROUP M,CRL X,CRL Y);IN VO Initialise(CRL X,CRL Y);IN VO Set(CRL x,CRL y,CO U& u);VO Add(CRL x,CRL y,CO U& u);IN CRL X()CO NE;IN CRL Y()CO NE;IN U Get(CRL x,CRL y);IN CO U& LSBRectangleSum(CRL i,CRL j)CO;U InitialRectangleSum(CRL x_final,CRL y_final);IN U RectangleSum(ll x_start,ll x_final,ll y_start,ll y_final);IN U Access(CRL i,CRL j,U u)NE;IN VO Replace(CRL i,CRL j,U u)NE;};TE <TY ABELIAN_GROUP,TY...Args> AbstractTwoDimensionalDynamicBIT(ABELIAN_GROUP M,CO Args&... args)-> AbstractTwoDimensionalDynamicBIT<inner_t<ABELIAN_GROUP>,ABELIAN_GROUP>;TE <TY U = ll>CL TwoDimensionalDynamicBIT:PU AbstractTwoDimensionalDynamicBIT<U,AdditiveGroup<U>>{PU:IN TwoDimensionalDynamicBIT(CRL X = 0,CRL Y = 0);};
TE <TY U,TY ABELIAN_GROUP> IN AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::AbstractTwoDimensionalDynamicBIT(ABELIAN_GROUP M,CRL X,CRL Y):m_M(MO(M)),m_X(X),m_Y(Y),m_fenwick(){ST_AS(is_same_v<U,inner_t<ABELIAN_GROUP>>);}TE <TY U> IN TwoDimensionalDynamicBIT<U>::TwoDimensionalDynamicBIT(CRL X,CRL Y):AbstractTwoDimensionalDynamicBIT<U,AdditiveGroup<U>>(AdditiveGroup<U>(),X,Y){}TE <TY U,TY ABELIAN_GROUP> IN U AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::Access(CRL i,CRL j,U u)NE{if(m_fenwick.count(i)> 0){auto& fenwick_i = m_fenwick.at(i);if(fenwick_i.count(j)> 0){u = m_M.Sum(MO(u),fenwick_i.at(j));}}RE MO(u);}TE <TY U,TY ABELIAN_GROUP> IN VO AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::Replace(CRL i,CRL j,U u)NE{if(u == m_M.Zero()){if(m_fenwick.count(i)> 0){auto& fenwick_i = m_fenwick.at(i);fenwick_i.erase(j);if(fenwick_i.empty()){m_fenwick.erase(i);}};}else{m_fenwick[i][j]= MO(u);}}TE <TY U,TY ABELIAN_GROUP> IN VO AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::Initialise(CRL X,CRL Y){m_fenwick.clear();m_X = X;m_Y = Y;}TE <TY U,TY ABELIAN_GROUP> IN VO AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::Set(CRL x,CRL y,CO U& u){Add(x,y,m_M.Sum(m_M.Inverse(Get(x,y)),u));}TE <TY U,TY ABELIAN_GROUP>VO AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::Add(CRL x,CRL y,CO U& u){ll i = x + 1;WH(i <= m_X){ll j = y + 1;WH(j <= m_Y){Replace(i,j,Access(i,j,u));j +=(j & -j);}i +=(i & -i);}RE;}TE <TY U,TY ABELIAN_GROUP> IN CRL AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::X()CO NE{RE m_X;}TE <TY U,TY ABELIAN_GROUP> IN CRL AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::Y()CO NE{RE m_Y;}TE <TY U,TY ABELIAN_GROUP> IN U AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::Get(CRL x,CRL y){AS(0 <= x && x < m_X && 0 <= y && y < m_Y);RE RectangleSum(x,x,y,y);}TE <TY U,TY ABELIAN_GROUP> IN CO U& AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::LSBRectangleSum(CRL i,CRL j)CO{AS(0 < i && i <= m_X && 0 < j && j <= m_Y);RE Access(i,j,m_M.Zero());}TE <TY U,TY ABELIAN_GROUP>U AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::InitialRectangleSum(CRL x_final,CRL y_final){U sum = m_M.Zero();ll i = min(x_final + 1,m_X);WH(i > 0){ll j = min(y_final + 1,m_Y);WH(j > 0){sum = Access(i,j,MO(sum));j -=(j & -j);}i -=(i & -i);}RE sum;}TE <TY U,TY ABELIAN_GROUP> IN U AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>::RectangleSum(ll x_start,ll x_final,ll y_start,ll y_final){x_start = max(0LL,x_start);x_final = min(m_X - 1,x_final);y_start = max(0LL,y_start);y_final = min(m_Y - 1,y_final);RE x_start <= x_final && y_start <= y_final?m_M.Sum(m_M.Sum(InitialRectangleSum(x_start - 1,y_start - 1),m_M.Inverse(InitialRectangleSum(x_final,y_start - 1))),m_M.Sum(m_M.Inverse(InitialRectangleSum(x_start - 1,y_final)),InitialRectangleSum(x_final,y_final))):m_M.Zero();}TE <CL Traits,TY U,TY ABELIAN_GROUP> IN OS& OP<<(OS& os,AbstractTwoDimensionalDynamicBIT<U,ABELIAN_GROUP>& bit){auto&& X = bit.X();auto&& Y = bit.Y();for(ll x = 0;x < X;x++){for(ll y = 0;y < Y;y++){(y == 0?x == 0?os:os << "\n":os << " ")<< bit.Get(x,y);}}RE os;}
#endif


#ifdef DEBUG
  #include "c:/Users/user/Documents/Programming/Mathematics/Polynomial/Cumulative/a_Body.hpp"
#else
// ../FFT/compress.txtÇêÊÇ…ì\ÇÈÅB

TE <TY T,int LE>CL BernulliNumberCalculator{PU:T m_val[LE];IN BernulliNumberCalculator(CO bool& negative = true);IN CO T& OP[](CRI i)CO;};
TE <TY T,int LE> IN BernulliNumberCalculator<T,LE>::BernulliNumberCalculator(CO bool& negative):m_val(){TRPO<T> f{LE};for(int i = 0;i < LE;i++){f[i] = T::FactorialInverse(i + 1);}f = Inverse(f);for(int i = 0;i < LE;i++){m_val[i] = MO(f[i] *= T::Factorial(i));}if(!negative && LE > 1){m_val[1] *= -1;}}TE <TY T,int LE> IN CO T& BernulliNumberCalculator<T,LE>::OP[](CRI i)CO{assert(i < LE);RE m_val[i];}

TE <TY T,int deg_max>PO<T> MonomialSum(CRI D){AS(D <= deg_max);ST CO BernulliNumberCalculator<T,deg_max+1> B{false};PO<T> AN{};for(int d = 1;d <= D + 1;d++){AN[d]= T::Combination(D + 1,d)* B[D + 1 - d];}AN /= T{D + 1};RE AN;}TE <TY T,int deg_max>PO<T> CumulativeSum(PO<T> f,CO bool& EXial){CO int f_SZ = f.SZ();if(f_SZ == 0){RE f;}CO int deg = f_SZ - 1;AS(deg <= deg_max);CO T f0 = f[0];CO int deg_half =(deg + 1)/ 2;if(!EXial){for(int d = 1;d <= deg;d++){f[d]*= T::Factorial(d);}}for(int d = 0;d < deg_half;d++){swap(f[d],f[deg - d]);}f.resize(deg);TRPO<T> f_TP{f_SZ,MO(f)};ST CO BernulliNumberCalculator<T,deg_max+1> B{false};ST PO<T> g{};ST int g_SZ = 0;WH(deg >= g_SZ){g[g_SZ]= B[g_SZ]* T::FactorialInverse(g_SZ);g_SZ++;}f_TP *= g;f_TP.SetTruncation(f_SZ + 1);CO int f_SZ_half =(f_SZ + 1)/ 2;for(int d = 0;d < f_SZ_half;d++){swap(f_TP[d],f_TP[f_SZ - d]);}if(!EXial){for(int d = 1;d <= f_SZ;d++){f_TP[d]*= T::FactorialInverse(d);}}f_TP[1]+= f_TP[0]= f0;RE f_TP;}TE <TY T>VE<T> CumulativeSum(VE<T> a,int order = 1){CO int SZ = a.SZ();if(SZ > 0){TRPO<T> f{SZ,MO(a)};TRPO<T> g{SZ,VE<T>(SZ,T::DeRP(MO(order)))};g[0]= T{};for(int d = 1;d < SZ;d++){g[d]/= d;}f *= Exp(g);a.resize(SZ);for(int d = 0;d < SZ;d++){a[d]= MO(f[d]);}}RE MO(a);}
#endif

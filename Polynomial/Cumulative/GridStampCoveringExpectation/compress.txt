#ifdef DEBUG
  #include "c:/Users/user/Documents/Programming/Mathematics/Polynomial/Cumulative/GridStampCoveringExpectation/a_Body.hpp"
#else
// ../../FFT/compress.txtÇêÊÇ…ì\ÇÈÅB

TE <TY T>PO<T> PW(PO<T> f,int e){PO<T> AN = PO<T>::one();WH(e > 0){(e & 1)== 0?AN:AN *= f;f *= f;e >>= 1;}RE AN;}

TE <TY T,int LE>CL BernulliNumberCalculator{PU:T m_val[LE];IN BernulliNumberCalculator(CO bool& negative = true);IN CO T& OP[](CRI i)CO;};
TE <TY T,int LE> IN BernulliNumberCalculator<T,LE>::BernulliNumberCalculator(CO bool& negative):m_val(){TRPO<T> f{LE};for(int i = 0;i < LE;i++){f[i]= T::FactorialInverse(i + 1);}f = Inverse(f);for(int i = 0;i < LE;i++){m_val[i]= MO(f[i]*= T::Factorial(i));}if(!negative && LE > 1){m_val[1]*= -1;}}TE <TY T,int LE> IN CO T& BernulliNumberCalculator<T,LE>::OP[](CRI i)CO{AS(i < LE);RE m_val[i];}

TE <TY T,int deg_max>PO<T> CumulativeSum(PO<T> f,CO bool& EXial = false){CO int f_SZ = f.SZ();if(f_SZ == 0){RE f;}CO int deg = f_SZ - 1;AS(deg <= deg_max);CO T f0 = f[0];CO int deg_half =(deg + 1)/ 2;if(!EXial){for(int d = 1;d <= deg;d++){f[d]*= T::Factorial(d);}}for(int d = 0;d < deg_half;d++){swap(f[d],f[deg - d]);}f.resize(deg);TRPO<T> f_TP{f_SZ,MO(f)};ST CO BernulliNumberCalculator<T,deg_max+1> B{false};ST PO<T> g{};ST int g_SZ = 0;WH(deg >= g_SZ){g[g_SZ]= B[g_SZ]* T::FactorialInverse(g_SZ);g_SZ++;}f_TP *= g;f_TP.SetTruncation(f_SZ + 1);CO int f_SZ_half =(f_SZ + 1)/ 2;for(int d = 0;d < f_SZ_half;d++){swap(f_TP[d],f_TP[f_SZ - d]);}if(!EXial){for(int d = 1;d<= f_SZ;d++){f_TP[d]*= T::FactorialInverse(d);}}f_TP[1]+= f_TP[0]= f0;RE f_TP;}

TE <TY T>T GridBigStampCoveringEpxpectation(CRI H,CRI W,CRI X,CRI Y,CRI N){CO T S = T(H - X + 1)*(W - Y + 1);CO T& one = PO<T>::c_one();CO T two = one + one;T AN{};PO<T> PW = PW(PO<T>{{one,- one / S}},N);for(int i = 1;i <= N;i++){auto cs = CumulativeSum<T,(1<<16)-1>(PO<T>(i,two));auto factor =[&](CRI h,CRI k){RE cs(T(h < 2 * k?h - k:k - 1))+(h < 2 * k?T(h - k + 1).PW(i)*= T(2 * k - h):T(k).PW(i)*= T(h - 2 * k + 2));};AN -= factor(H,X)* factor(W,Y)* PW[i];}RE AN;}TE <TY T>T GridSmallStampCoveringEpxpectation(CRI H,CRI W,CRI X,CRI Y,CO ll& N){CO int H_minus = H - X;CO int W_minus = W - Y;CO T S_inv = 1 /(T(H_minus + 1)*(W_minus + 1));T AN = T(H)* W;for(int i = 0;i < H;i++){T u{};for(int j = 0;j < W;j++){T t =(1 -(max(min(i,H_minus)- max(i - X,-1),0)* max(min(j,W_minus)- max(j - Y,-1),0))* S_inv).PW(N);if(Y <= j && j < W_minus){u += t *(W - 2 * Y);j = W_minus - 1;}else{u += t;}}if(X <= i && i < H_minus){AN -= u *(H - 2 * X);i = H_minus - 1;}else{AN -= u;}}RE AN;}TE <TY T> IN T GridStampCoveringEpxpectation(CRI H,CRI W,CRI X,CRI Y,CO ll& N){AS(1 <= X && X <= H && 1 <= Y && Y <= W);RE ll(N)* N <= ll(X)* Y?GridBigStampCoveringEpxpectation<T>(int(H),int(W),int(X),int(Y),int(N)):GridSmallStampCoveringEpxpectation<T>(H,W,X,Y,N);}
#endif


#ifdef DEBUG
  #include "c:/Users/user/Documents/Programming/Mathematics/Polynomial/BostanMori/MultiCoefficientEvaluation/a_Body.hpp"
#else
// ../../FFT/compress.txtÇêÊÇ…ì\ÇÈÅB

TE <TY T,TY INT>VO MultiCoefficientEvaluation_Body(PO<T> f,PO<T> g,unordered_map<INT,T>& coeff,CO INT& deg_max){AS(!coeff.empty());int g_SZ = g.SZ();AS(f.SZ()<= g_SZ);if(g_SZ > deg_max + 1){g.resize(g_SZ = deg_max + 1);}PO<T> g_sym{};for(int d = 0;d < g_SZ;d++){(d & 1)== 0?g_sym[d]+= g[d]:g_sym[d]-= g[d];}f *= g_sym;g *= g_sym;g_sym = g.zero();PO<T> g_new{};for(int d = 0;d < g_SZ;d++){g_new[d]= MO(g[d << 1]);}g = MO(g_new);g_new = g.zero();unordered_map<INT,T> coeff_even{};unordered_map<INT,T> coeff_odd{};INT deg_max_even = 0;INT deg_max_odd = 0;for(auto IT = coeff.BE(),EN = coeff.EN();IT != EN;IT++){INT d = IT->first >> 1;if((IT->first & 1)== 0){coeff_even[d];deg_max_even = max(deg_max_even,d);}else{coeff_odd[d];deg_max_odd = max(deg_max_odd,d);}}if(!coeff_even.empty()){auto IT = coeff_even.BE();if(coeff_even.SZ()== 1 && IT->first == 0){IT->second = MO(f[0]/= g[0]);}else{CO int f_even_SZ = min(ll((f.SZ()+ 1)>> 1),deg_max_even + 1);PO<T> f_even{};for(int d = 0;d < f_even_SZ;d++){f_even[d]= MO(f[d << 1]);}if(!coeff_odd.empty()){MultiCoefficientEvaluation_Body(MO(f_even),g,coeff_even,deg_max_even);}else{f = g.zero();MultiCoefficientEvaluation_Body(MO(f_even),MO(g),coeff_even,deg_max_even);}}for(auto EN = coeff_even.EN();IT != EN;IT++){coeff[IT->first << 1]= MO(IT->second);}coeff_even.clear();}if(!coeff_odd.empty()){auto IT = coeff_odd.BE();if(coeff_odd.SZ()== 1 && IT->first == 0){IT->second = MO(f[1]/= g[0]);}else{CO int f_odd_SZ = min(ll(f.SZ()>> 1),deg_max_odd + 1);PO<T> f_odd{};for(int d = 0;d < f_odd_SZ;d++){f_odd[d]= MO(f[(d << 1)| 1]);}f = g.zero();MultiCoefficientEvaluation_Body(MO(f_odd),MO(g),coeff_odd,deg_max_odd);}for(auto EN = coeff_odd.EN();IT != EN;IT++){coeff[(IT->first << 1)| 1]= MO(IT->second);}coeff_odd.clear();}RE;}TE <TY T,TY INT>VO MultiCoefficientEvaluation(PO<T> f,PO<T> g,unordered_map<INT,T>& coeff){if(coeff.empty()){RE;}INT deg_max = 0;for(auto&[d,c]:coeff){deg_max = max(deg_max,d);}int f_SZ = f.SZ();if(f_SZ > deg_max + 1){f.resize(f_SZ = deg_max + 1);}f.Reduce();f_SZ = f.SZ();if(f_SZ == 0){RE;}int g_SZ = g.SZ();if(g_SZ > deg_max + 1){g.resize(g_SZ = deg_max + 1);}g.Reduce();g_SZ = g.SZ();for(int d = 0;d < g_SZ;d++){if(g[d]== 0){AS(d >= f_SZ || f[d]== 0);}else{if(d > 0){PO<T> f_new{};f_SZ < d?f_SZ = 0:f_SZ -= d;for(int e = 0;e < f_SZ;e++){f_new[e]= MO(f[e+d]);}f = MO(f_new);PO<T> g_new{};g_SZ -= d;for(int e = 0;e < g_SZ;e++){g_new[e]= MO(g[e+d]);}g = MO(g_new);}break;}}CO PO<T> f_div = f / g;f -= f_div * g;f.Reduce();MultiCoefficientEvaluation_Body(MO(f),MO(g),coeff,deg_max);CRI f_div_SZ = f_div.SZ();if(f_div_SZ > 0){for(auto IT = coeff.BE(),EN = coeff.EN();IT != EN;IT++){if(IT->first < f_div_SZ){IT->second += f_div[IT->first];}}}RE;}
#endif


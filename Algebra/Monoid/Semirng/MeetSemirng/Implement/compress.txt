TE <TY U> CL Trop;TE <TY U>CL ZeroForTrop{PU:ZeroForTrop()= delete;ST U g_zero;};TE <TY U = ll>CL Trop{PU:U m_n;IN Trop(CO U& n = ZeroForTrop<U>::g_zero);IN Trop<U>& OP+=(CO Trop<U>& n);IN Trop<U>& OP*=(CO Trop<U>& n);IN Trop<U> OP+(CO Trop<U>& n)CO;IN Trop<U> OP*(CO Trop<U>& n)CO;IN VO Set(CO U& n)NE;IN CO U& Get()CO NE;ST IN VO SetZero(CO U& zero)NE;;};
TE <TY U> U ZeroForTrop<U>::g_zero{};TE <TY U> IN Trop<U>::Trop(CO U& n):m_n(n){}TE <TY U> IN Trop<U>& Trop<U>::OP+=(CO Trop<U>& n){n.m_n == ZeroForTrop<U>::g_zero?m_n:m_n =(m_n == ZeroForTrop<U>::g_zero?n.m_n:max(m_n,n.m_n));RE *TH;}TE <TY U> IN Trop<U>& Trop<U>::OP*=(CO Trop<U>& n){m_n == ZeroForTrop<U>::g_zero?m_n:m_n =(n.m_n == ZeroForTrop<U>::g_zero?ZeroForTrop<U>::g_zero:m_n + n.m_n);RE *TH;}TE <TY U> IN Trop<U> Trop<U>::OP+(CO Trop<U>& n)CO{RE MO(Trop<U>(*TH)+= n);}TE <TY U> IN Trop<U> Trop<U>::OP*(CO Trop<U>& n)CO{RE MO(Trop<U>(*TH)*= n);}TE <TY U> IN VO Trop<U>::Set(CO U& n)NE{m_n = n;}TE <TY U> IN CO U& Trop<U>::Get()CO NE{RE m_n;}TE <TY U> IN VO Trop<U>::SetZero(CO U& zero)NE{ZeroForTrop<U>::g_zero = zero;};TE <CL Traits,TY U> IN basic_istream<char,Traits>& OP>>(basic_ostream<char,Traits>& is,CO Trop<U>& n)NE{U temp;is >> temp;n.Set(temp);RE is;}TE <CL Traits,TY U> IN basic_ostream<char,Traits>& OP<<(basic_ostream<char,Traits>& os,CO Trop<U>& n)NE{RE os << n.Get();}

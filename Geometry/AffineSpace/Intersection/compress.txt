#ifdef DEBUG
  #include "c:/Users/user/Documents/Programming/Mathematics/Geometry/AffineSpace/Intersection/a_Body.hpp"
#else
#define AREA_OF_TRIANGLE (x1 - x0)*(y2 - y0)-(y1 - y0)*(x2 - x0)
#define CALL_AREA_OF_TRIANGLE Area(v0.first,v0.second,v1.first,v1.second,v2.first,v2.second)
IN ll Area_ll(CRL x0,CRL y0,CRL x1,CRL y1,CRL x2,CRL y2){RE AREA_OF_TRIANGLE;}TE <TY INT> IN ll Area(CO INT& x0,CO INT& y0,CO INT& x1,CO INT& y1,CO INT& x2,CO INT& y2){RE Area_ll(x0,y0,x1,y1,x2,y2);}IN double Area(CO double& x0,CO double& y0,CO double& x1,CO double& y1,CO double& x2,CO double& y2){RE AREA_OF_TRIANGLE;}TE <TY INT> IN ll Area(CO pair<INT,INT>& v0,CO pair<INT,INT>& v1,CO pair<INT,INT>& v2){RE CALL_AREA_OF_TRIANGLE;}IN double Area(CO pair<double,double>& v0,CO pair<double,double>& v1,CO pair<double,double>& v2){RE CALL_AREA_OF_TRIANGLE;}

TE <TY INT> IN int sign(CO INT& n,CO INT& epsilon = 0){CE bool is_not_double = !is_same_v<INT,double>;AS(is_not_double || epsilon > 0);RE n < -epsilon?-1:epsilon < n?1:0;}

TE <TY INT> IN INT L1(CO INT& x,CO INT& y){RE abs(x)+ abs(y);}TE <TY INT> IN INT L1(CO pair<INT,INT>& v){RE L1(v.first,v.second);}TE <TY INT> IN INT L1_Distance(CO INT& x0,CO INT& y0,CO INT& x1,CO INT& y1){RE L1(x0 - x1,y0 - y1);}TE <TY INT> IN INT L1_Distance(CO pair<INT,INT>& v0,CO pair<INT,INT>& v1){RE L1(v0.first - v1.first,v0.second - v1.second);}TE <TY INT> IN pair<INT,INT> L1_to_Linfty(CO INT& x,CO INT& y){RE{x + y,x - y};}TE <TY INT> IN pair<INT,INT> L1_to_Linfty(CO pair<INT,INT>& v){RE L1_to_Linfty(v.first,v.second);}TE <TY INT> IN pair<INT,INT> Linfty_to_L1(CO INT& x,CO INT& y){AS((x & 1)==(y & 1));RE{(x + y)>> 1,(x - y)>> 1};}TE <TY INT> IN pair<INT,INT> Linfty_to_L1(CO pair<INT,INT>& v){RE Linfty_to_L1(v.first,v.second);}TE <TY INT> IN bool L1_LongestEdge(CO INT& x0,CO INT& y0,CO INT& x1,CO INT& y1,CO INT& z,CO INT& w,CO INT& epsilon = 0){RE sign(L1_Distance(x0,y0,x1,y1)- max(L1_Distance(x0,y0,z,w),L1_Distance(z,w,x1,y1)),epsilon)>= 0;}TE <TY INT> IN bool L1_LongestEdge(CO pair<INT,INT>& v0,CO pair<INT,INT>& v1,CO pair<INT,INT>& v2,CO INT& epsilon = 0){RE L1_LongestEdge(v0.first,v0.second,v1.first,v1.second,v2.first,v2.second,epsilon);}

TE <TY INT> IN bool Online(CO INT& x0,CO INT& y0,CO INT& x1,CO INT& y1,CO INT& z,CO INT& w,CO INT& epsilon = 0){RE sign(Area(x0,y0,x1,y1,z,w),epsilon)== 0 && L1_LongestEdge(x0,y0,x1,y1,z,w,epsilon);}TE <TY INT> IN bool Online(CO pair<INT,INT>& v0,CO pair<INT,INT>& v1,CO pair<INT,INT>& v2,CO INT& epsilon = 0){RE Online(v0.first,v0.second,v1.first,v1.second,v2.first,v2.second,epsilon);}TE <TY INT> IN int IntersectionType(CO INT& x0,CO INT& y0,CO INT& x1,CO INT& y1,CO INT& z0,CO INT& w0,CO INT& z1,CO INT& w1,CO INT& epsilon = 0){CO int sign00 = sign(Area(x0,y0,x1,y1,z0,w0),epsilon),sign01 = sign(Area(x0,y0,x1,y1,z1,w1),epsilon),sign10 = sign(Area(z0,w0,z1,w1,x0,y0),epsilon),sign11 = sign(Area(z0,w0,z1,w1,x1,y1),epsilon);RE sign00 * sign01 < 0 && sign10 * sign11 < 0?1:((sign00 == 0 && L1_LongestEdge(x0,y0,x1,y1,z0,w0,epsilon))||(sign01 == 0 && L1_LongestEdge(x0,y0,x1,y1,z1,w1,epsilon))||(sign10 == 0 && L1_LongestEdge(z0,w0,z1,w1,x0,y0,epsilon))||(sign11 == 0 && L1_LongestEdge(z0,w0,z1,w1,x1,y1,epsilon)))?0:-1;}TE <TY INT> IN int IntersectionType(CO pair<INT,INT>& v0,CO pair<INT,INT>& v1,CO pair<INT,INT>& v2,CO pair<INT,INT>& v3,CO INT& epsilon = 0){RE IntersectionType(v0.first,v0.second,v1.first,v1.second,v2.first,v2.second,v3.first,v3.second,epsilon);}
#endif


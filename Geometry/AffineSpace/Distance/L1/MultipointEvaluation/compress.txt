#ifdef DEBUG
  #include "c:/Users/user/Documents/Programming/Mathematics/Geometry/AffineSpace/Distance/L1/MultipointEvaluation/a_Body.hpp"
#else
TE <TY INT>VE<set<pair<INT,int>>> Multipoint_L1_Distance(CO VE<INT>& x0,CO INT& y0,CO VE<pair<INT,INT>>& v1,CRI LE){CO int SZ0 = x0.SZ();CO int SZ1 = v1.SZ();CO int SZ = SZ0 + SZ1;VE<pair<INT,int>> x(SZ);for(int i = 0;i < SZ0;i++){x[i]={x0[i],i};}for(int i = 0;i < SZ1;i++){x[i + SZ0]={v1[i].first,i + SZ0};}sort(x.BE(),x.EN());VE<set<pair<INT,int>>> AN(SZ0);set<pair<INT,int>> temp{};INT d_init = x.back().first;for(int n = 0;n < SZ;n++){auto&[xn,i]= x[n];if(i < SZ0){CO INT dx = xn - d_init;auto& AN_i = AN[i];for(auto& d:temp){AN_i.insert({d.first + dx,d.second});}}else{temp.insert({abs(v1[i - SZ0].second - y0)-(xn -(d_init = min(d_init,xn))),i - SZ0});if(int(temp.SZ())> LE){temp.erase(--(temp.EN()));}}}temp.clear();d_init = x.front().first;for(int n = SZ - 1;n >= 0;n--){auto&[xn,i]= x[n];if(i < SZ0){CO INT dx = d_init - xn;auto& AN_i = AN[i];for(auto& d:temp){AN_i.insert({d.first + dx,d.second});if(int(AN_i.SZ())> LE){AN_i.erase(--(AN_i.EN()));}}}else{temp.insert({abs(v1[i - SZ0].second - y0)-((d_init = max(d_init,xn))- xn),i - SZ0});if(int(temp.SZ())> LE){temp.erase(--(temp.EN()));}}}RE AN;}TE <TY INT> IN VE<set<pair<INT,int>>> Multipoint_L1_Distance(CO INT& x0,CO VE<INT>& y0,VE<pair<INT,INT>> v1,CRI LE){for(auto&[x,y]:v1){swap(x,y);}RE Multipoint_L1_Distance(y0,x0,v1,LE);}
#endif

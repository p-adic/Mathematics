#愚直
p=list(R(N))
def r(i):
	while i!=p[i]:i=p[i]
	return i
for i in R(M):
	A,B=map(int,input().split())
	A,B=r(A-1),r(B-1)
	p[A]=B

#根探索時の各ノードの根更新あり
p=list(R(N))
def r(i):
	m=p[i]
	while i!=m:
		p[i]=i=p[m]
		m=p[i]
	return i
for i in R(M):
	A,B=map(int,input().split())
	A,B=r(A-1),r(B-1)
	p[A]=B

#重み付けあり
p,h=list(R(N)),[0]*N
def r(i):
	m=p[i]
	while i!=m:
		p[i]=i=p[m]
		m=p[i]
	return i
for i in R(M):
	A,B=map(int,input().split())
	A,B=r(A-1),r(B-1)
	if h[B]<h[A]:A,B=B,A
	if h[A]==h[B]:h[B]+=1
	p[A]=B

#verify: https://atcoder.jp/contests/abc087/submissions/48988855
#重み付けあり、ポテンシャル付き
#w[A]-w[B]=Wになるようにポテンシャルを更新
p,h=list(R(N)),[0]*N
w=h[:]
def r(i):
	m=p[i]
	while m!=p[m]:
		w[i]+=w[m]
		m=p[i]=p[m]
	return m
for i in R(M):
	A,B,W=map(int,input().split())
	A,B=A-1,B-1
	a,b=r(A),r(B)
	if a==b:
		assert(w[a]-w[b]==W)
	else:
		W=w[B]+W-w[A]
		if h[b]<h[a]:a,b,W=b,a,-W
		if h[a]==h[b]:h[b]+=1
		p[a],w[a]=b,W


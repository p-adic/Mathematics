// êÊÇ…../compress.txtÇ∆../../../Algebra/Monoid/Semirng/compress.txtÇì\ÇÈÅB

TE <TY U>CL VirtualMeetSemilattice:VI PU VirtualMonoid<U>{PU:IN U Meet(CO U& u0,CO U& u1);};TE <TY U>CL MinSemilattice:VI PU VirtualMeetSemilattice<U>,PU PointedSet<U>{PU:IN MinSemilattice(CO U& infty_U);IN U Product(CO U& u0,CO U& u1);};
TE <TY U> IN U VirtualMeetSemilattice<U>::Meet(CO U& u0,CO U& u1){RE TH->Product(u0,u1);}TE <TY U> IN MinSemilattice<U>::MinSemilattice(CO U& infty_U):PointedSet<U>(infty_U){}TE <TY U> IN U MinSemilattice<U>::Product(CO U& u0,CO U& u1){RE u0 < u1?u0:u1;}

TE <TY U,TY MEET_SEMILATTICE,TY SEMIGROUP>CL VirtualMeetSemirng:VI PU VirtualSemirng<U,MEET_SEMILATTICE,SEMIGROUP>{PU:IN CO U& Infty();IN U Meet(CO U& u0,CO U& u1);};TE <TY U,TY SEMIGROUP>CL AbstractTropicalSemirng:VI PU VirtualMeetSemirng<U,MinSemilattice<U>,SEMIGROUP>,PU AbstractSemirng<U,MinSemilattice<U>,SEMIGROUP>{PU:IN AbstractTropicalSemirng(CO U& infty_U,SEMIGROUP M);IN U Product(CO U& u0,CO U& u1);};TE <TY U>CL AdditiveTropicalSemirng:PU AbstractTropicalSemirng<U,AdditiveMagma<U>>{PU:IN AdditiveTropicalSemirng(CO U& infty_U);};TE <TY U>CL MultiplicativeTropicalSemirng:PU AbstractTropicalSemirng<U,MultiplicativeMagma<U>>{PU:IN MultiplicativeTropicalSemirng(CO U& infty_U);};
TE <TY U,TY SEMIGROUP> IN AbstractTropicalSemirng<U,SEMIGROUP>::AbstractTropicalSemirng(CO U& infty_U,SEMIGROUP M):AbstractSemirng<U,MinSemilattice<U>,SEMIGROUP>(MinSemilattice<U>(infty_U),MO(M)){}TE <TY U> IN AdditiveTropicalSemirng<U>::AdditiveTropicalSemirng(CO U& infty_U):AbstractTropicalSemirng<U,AdditiveMagma<U>>(infty_U,AdditiveMagma<U>()){}TE <TY U> IN MultiplicativeTropicalSemirng<U>::MultiplicativeTropicalSemirng(CO U& infty_U):AbstractTropicalSemirng<U,MultiplicativeMagma<U>>(infty_U,MultiplicativeMagma<U>()){}TE <TY U,TY MEET_SEMILATTICE,TY SEMIGROUP> IN CO U& VirtualMeetSemirng<U,MEET_SEMILATTICE,SEMIGROUP>::Infty(){RE TH->Zero();}TE <TY U,TY MEET_SEMILATTICE,TY SEMIGROUP> IN U VirtualMeetSemirng<U,MEET_SEMILATTICE,SEMIGROUP>::Meet(CO U& u0,CO U& u1){RE TH->Sum(u0,u1);}TE <TY U,TY SEMIGROUP> IN U AbstractTropicalSemirng<U,SEMIGROUP>::Product(CO U& u0,CO U& u1){CO U& infty = TH->Infty();RE u0 < infty && u1 < infty?TH->MultiplicativeSemigroup().Product(u0,u1):infty;}

TE <TY U,TY IDEMPOTENT_SEMIRNG>VO FloydWarshall(IDEMPOTENT_SEMIRNG R,CO VE<VE<U>>& d,VE<VE<U>>& weight){CO int SZ = d.SZ();AS(SZ > 0?SZ == int(d[0].SZ()):true);weight = d;CO U& infty = R.Infty();for(int k = 0;k < SZ;k++){auto& weight_k = weight[k];for(int i = 0;i < SZ;i++){auto& weight_i = weight[i];CO U& weight_ik = weight_i[k];if(i != k && weight_ik != infty){for(int j = 0;j < SZ;j++){CO U& weight_kj = weight_k[j];if(i != j && k != j && weight_kj != infty){U& weight_ij = weight_i[j];weight_ij = R.Meet(weight_ij,R.Product(weight_ik,weight_kj));}}}}}RE;}TE <TY U,TY TROPICAL_SEMIRNG>VO FloydWarshall(TROPICAL_SEMIRNG R,CO VE<VE<U>>& d,VE<VE<U>>& weight,VE<VE<int>>& path){CO int SZ = d.SZ();AS(SZ > 0?SZ == int(d[0].SZ()):true);weight = d;path = VE<VE<int>>(SZ,VE<int>(SZ,-1));CO U& infty = R.Infty();for(int k = 0;k < SZ;k++){auto& weight_k = weight[k];for(int i = 0;i < SZ;i++){auto& weight_i = weight[i];auto& path_i = path[i];CO U& weight_ik = weight_i[k];if(i != k && weight_ik != infty){for(int j = 0;j < SZ;j++){CO U& weight_kj = weight_k[j];if(i != j && k != j && weight_kj != infty){U& weight_ij = weight_i[j];U weight_curr = R.Product(weight_ik,weight_kj);if(weight_ij > weight_curr){weight_ij = MO(weight_curr);path_i[j]= k;}}}}}}RE;}

#ifdef DEBUG
  #include "c:/Users/user/Documents/Programming/Mathematics/Polynomial/BostanMori/a_Body.hpp"
#else
// ../Truncate/compress.txtÇêÊÇ…ì\ÇÈÅB

TE <TY T,TY INT> VO MultiCoefficientEvaluation_Body(PO<T> f,PO<T> g,unordered_map<INT,T>& coeff){assert(!coeff.empty());CO uint g_SZ = g.SZ();assert(f.SZ() <= g_SZ);PO<T> g_sym{};for(uint d = 0;d < g_SZ;d++){(d & 1)== 0?g_sym[d] += g[d]:g_sym[d] -= g[d];}f *= g_sym;g *= g_sym;g_sym.resize(0);for(uint d = 0;d < g_SZ;d++){g[d] = MO(g[d << 1]);}g.resize(g_SZ);unordered_map<INT,T> coeff_even{};unordered_map<INT,T> coeff_odd{};for(auto IT = coeff.begin(),EN = coeff.EN();IT != EN;IT++){((IT->first & 1)== 0?coeff_even:coeff_odd)[IT->first >> 1];}if(!coeff_even.empty()){auto IT = coeff_even.begin();if(coeff_even.size() == 1?IT->first == 0:false){IT->second = move(f[0] /= g[0]);}else{PO<T> f_even{};CO uint f_even_SZ = (f.SZ()+ 1)>> 1;for(uint d = 0;d < f_even_SZ;d++){f_even[d] = MO(f[d << 1]);}if(!coeff_odd.empty()){MultiCoefficientEvaluation_Body(MO(f_even),g,coeff_even);}else{MultiCoefficientEvaluation_Body(MO(f_even),MO(g),coeff_even);}}for(auto EN = coeff_even.EN();IT != EN;IT++){coeff[IT->first << 1] = MO(IT->second);}coeff_even.clear();}if(!coeff_odd.empty()){auto IT = coeff_odd.begin();if(coeff_odd.size()== 1?IT->first == 0:false){IT->second = MO(f[1] /= g[0]);}else{CO uint f_odd_SZ = f.SZ()>> 1;for(uint d = 0;d < f_odd_SZ;d++){f[d] = MO(f[(d << 1)| 1]);}f.resize(f_odd_SZ);MultiCoefficientEvaluation_Body(MO(f),MO(g),coeff_odd);}for(auto EN = coeff_odd.EN();IT != EN;IT++){coeff[(IT->first << 1)| 1] = MO(IT->second);}coeff_odd.clear();}RE;}TE <TY T,TY INT>VO MultiCoefficientEvaluation(PO<T> f,PO<T> g,unordered_map<INT,T>& coeff){if(coeff.empty()){RE;}CO PO<T> f_div = f / g;f -= f_div * g;f.ReMORedundantZero();MultiCoefficientEvaluation_Body(MO(f),MO(g),coeff);CRUI f_div_SZ = f_div.SZ();if(f_div_SZ > 0){for(auto IT = coeff.begin(),EN = coeff.EN();IT != EN;IT++){if(IT->first < f_div_SZ){IT->second += f_div[IT->first];}}}RE;}
#endif


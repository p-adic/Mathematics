#ifdef DEBUG
  #include "c:/Users/user/Documents/Programming/Mathematics/Polynomial/MultipointEvaluation/a_Body.hpp"
#else
// ../Truncate/compress.txtを先に貼る。

// 多点評価
VO SetProductTree(V1<V2<T> >& product_tree){V2<T> *p_node = &(product_tree.back());WH(p_node->SZ()> 1){V2<T> node{};for(auto IT = p_node->BE(),EN = p_node->EN();IT != EN;IT++){node.push_back(T{});T& f = *IT;IT++;if(IT == EN){node.back()= f;break;}else{node.back()= f * *IT;}}product_tree.push_front(MO(node));p_node = &(product_tree.front());}RE;}TE <TY T,TE <TY...> TY V1,TE <TY...> TY V2,TE <TY...> TY V3>VO SetPointTree(CO V1<T>& point,V2<V3<PO<T> > >& point_tree){CO PO<T>& x = PO<T>::x();V3<PO<T> > linear{};for(auto& p:point){linear.push_back(x - PO<T>(p));}point_tree.push_front(MO(linear));SetProductTree(point_tree);RE;}TE <TY T,TE <TY...> TY V1,TE <TY...> TY V2,TE <TY...> TY V3>VO SetPointTreeEvaluation(CO PO<T>& f,CO V1<V2<PO<T> > >& point_tree,V3<T>& AN){AS(!point_tree.empty());CO V2<PO<T> >& prod = point_tree.front();if(prod.empty()){RE;}CO PO<T>& zero = PO<T>::zero();auto IT_tree = point_tree.BE(),EN_tree = point_tree.EN();LI<PO<T> > RS ={f % IT_tree->front()};IT_tree++;WH(IT_tree != EN_tree){auto IT_RS = RS.BE(),EN_RS = RS.EN();auto IT_node = IT_tree->BE(),EN_node = IT_tree->EN();WH(IT_RS != EN_RS){CO PO<T>& f = *IT_node;IT_node++;if(IT_node != EN_node){*(RS.insert(IT_RS,zero))= *IT_RS % f;*IT_RS %= *IT_node;IT_node++;}IT_RS++;}IT_tree++;}for(auto& f:RS){AN.push_back(f[0]);}RE;}TE <TY T,TE <TY...> TY V1,TE <TY...> TY V2> IN VO SetMultipointEvaluation(CO PO<T>& f,CO V1<T>& point,V2<T>& AN){LI<LI<PO<T> > > pt{};SetPointTree(point,pt);SetPointTreeEvaluation(f,pt,AN);}

// 差積（多点評価を用いる）
TE <TY T,TE <TY...> TY V1,TE <TY...> TY V2>VO SetDifferenceProduct(CO V1<T>& point,V2<T>& AN){LI<VE<PO<T> > > pt{};SetPointTree(point,pt);CO VE<PO<T> >& top = pt.front();if(top.empty()){RE;}PO<T> g{Differential(1,top.front())};SetPointTreeEvaluation(g,pt,AN);RE;}

// 分子と評価点が与えられた時の部分分数分解（多点評価を用いる）
TE <TY T,TE <TY...> TY V1,TE <TY...> TY V2> VO SetPartialFractionDecomposition(CO PO<T>& f,CO V1<T>& point,V2<T>& AN){assert(f.SZ()<= point.size());LI<LI<PO<T> > > pt{};SetPointTree(point,pt);CO LI<PO<T> >& top = pt.front();if(top.empty()){RE;}PO<T> g{Differential(1,top.front())};LI<T> r{};SetPointTreeEvaluation(f,pt,AN);SetPointTreeEvaluation(g,pt,r);auto IT1 = AN.BE(),EN1 = AN.EN();auto IT2 = r.BE();WH(IT1 != EN1){*(IT1++)/= *(IT2++);}RE;}
// 商と評価点が与えられた時の部分分数分解（多点評価を用いる）
TE <TY T,TE <TY...> TY V1,TE <TY...> TY V2> VO SetPartialFractionDecomposition(CRUI N,PO<T> f,CO V1<T>& point,V2<T>& AN){LI<LI<PO<T> > > pt{};SetPointTree(point,pt);CO LI<PO<T> >& top = pt.front();if(top.empty()){RE;}PO<T> g{top.front()};TRPO<T> fg{point.SZ()+1,MO(f)};fg *= g;CO PO<T>& h = fg;AN.push_back((h/g)[0]);g = Differential(1,g);LI<T> r{};SetPointTreeEvaluation(fg,pt,AN);SetPointTreeEvaluation(g,pt,r);auto IT1 = AN.BE(),EN1 = AN.EN();IT1++;auto IT2 = r.BE();WH(IT1 != EN1){*(IT1++)/= *(IT2++);}RE;}
#endif


// ../../../compress.txtÇêÊÇ…ì\ÇÈÅB

TE <TY R,TY U>CL VirtualModule:VI PU VirtualGroup<U>{PU:VI IN U Act(CO R& r,CO U& u)= 0;};TE <TY R,TY U,TY O_U,TY M_U,TY I_U>CL AbstractModule:VI PU VirtualModule<R,U>,PU AbstractGroup<U,M_U,I_U>{PU:O_U& m_o_U;IN AbstractModule(CO R& dummy,O_U& o_U,M_U& m_U,CO U& e_U,I_U& i_U);IN U Act(CO R& r,CO U& u);};TE <TY R,TY U>CL Module:VI PU VirtualModule<R,U>,PU AdditiveGroup<U>{PU:IN U Act(CO R& r,CO U& u);};
TE <TY R,TY U,TY O_U,TY M_U,TY I_U> IN AbstractModule<R,U,O_U,M_U,I_U>::AbstractModule(CO R& dummy,O_U& o_U,M_U& m_U,CO U& e_U,I_U& i_U):AbstractGroup<U,M_U,I_U>(m_U,e_U,i_U),m_o_U(o_U){ST_AS(is_invocable_r_v<U,O_U,R,U>);}TE <TY R,TY U,TY O_U,TY M_U,TY I_U> IN U AbstractModule<R,U,O_U,M_U,I_U>::Act(CO R& r,CO U& u){RE m_o_U.Act(r,u);}TE <TY R,TY U> IN U Module<R,U>::Act(CO R& r,CO U& u){RE r * u;}

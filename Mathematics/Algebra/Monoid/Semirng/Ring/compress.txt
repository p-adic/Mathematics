// êÊÇ…../../../compress.txtÇì\ÇÈÅB

TE <TY U,TY GROUP,TY MONOID>CL VirtualRing{PU:GROUP m_R0;MONOID m_R1;IN VirtualRing(GROUP R0,MONOID R1);IN U Sum(CO U& u0,CO U& u1);IN CO U& Zero()CO NE;IN U Inverse(CO U& u);IN U Product(CO U& u0,CO U& u1);IN CO U& One()CO NE;IN GROUP& AdditiveGroup()NE;IN MONOID& MultiplicativeMonoid()NE;};TE <TY U = ll>CL Ring:virtual PU VirtualRing<U,AdditiveGroup<U>,MultiplicativeMonoid<U>>{PU:IN Ring(CO U& one_U);};TE <TY U,TY A_U,TY I_U,TY M_U>CL AbstractRing:virtual PU VirtualRing<U,AbstractGroup<U,A_U,I_U>,AbstractMonoid<U,M_U>>{PU:IN AbstractRing(A_U& a_U,CO U& z_U,I_U& i_U,M_U& m_U,CO U& e_U);};
TE <TY U,TY GROUP,TY MONOID> IN VirtualRing<U,GROUP,MONOID>::VirtualRing(GROUP R0,MONOID R1):m_R0(MO(R0)),m_R1(MO(R1)){}TE <TY U> IN Ring<U>::Ring(CO U& one_U):VirtualRing<U,AdditiveGroup<U>,MultiplicativeMonoid<U>>(AdditiveGroup<U>(),MultiplicativeMonoid<U>(one_U)){}TE <TY U,TY A_U,TY I_U,TY M_U> IN AbstractRing<U,A_U,I_U,M_U>::AbstractRing(A_U& a_U,CO U& z_U,I_U& i_U,M_U& m_U,CO U& e_U):VirtualRing<U,AbstractGroup<U,A_U,I_U>,AbstractMonoid<U,M_U>>(AbstractGroup<U,A_U,I_U>(a_U,z_U,i_U),AbstractMonoid<U,M_U>(m_U,e_U)){}TE <TY U,TY GROUP,TY MONOID> IN U VirtualRing<U,GROUP,MONOID>::Sum(CO U& u0,CO U& u1){RE m_R0.Sum(u0,u1);}TE <TY U,TY GROUP,TY MONOID> IN CO U& VirtualRing<U,GROUP,MONOID>::Zero()CO NE{RE m_R0.Zero();}TE <TY U,TY GROUP,TY MONOID> IN U VirtualRing<U,GROUP,MONOID>::Inverse(CO U& u){RE m_R0.Inverse(u);}TE <TY U,TY GROUP,TY MONOID> IN U VirtualRing<U,GROUP,MONOID>::Product(CO U& u0,CO U& u1){RE m_R1.Product(u0,u1);}TE <TY U,TY GROUP,TY MONOID> IN CO U& VirtualRing<U,GROUP,MONOID>::One()CO NE{RE m_R1.One();}TE <TY U,TY GROUP,TY MONOID> IN GROUP& VirtualRing<U,GROUP,MONOID>::AdditiveGroup()NE{RE m_R0;}TE <TY U,TY GROUP,TY MONOID> IN MONOID& VirtualRing<U,GROUP,MONOID>::MultiplicativeMonoid()NE{RE m_R1;}

#define DC_OF_CPOINT(POINT)IN CO U& POINT()CO NE
#define DC_OF_POINT(POINT)IN U& POINT() NE
#define DF_OF_CPOINT(POINT)TE <TY U> IN CO U& VirtualPointedSet<U>::POINT()CO NE{RE Point();}
#define DF_OF_POINT(POINT)TE <TY U> IN U& VirtualPointedSet<U>::POINT()NE{RE Point();}
TE <TY U>CL UnderlyingSet{PU:US type = U;};TE <TY U>CL VirtualPointedSet:virtual PU UnderlyingSet<U>{PU:virtual CO U& Point()CO NE = 0;virtual U& Point() NE = 0;DC_OF_CPOINT(Unit);DC_OF_CPOINT(Zero);DC_OF_CPOINT(One);DC_OF_CPOINT(Infty);DC_OF_CPOINT(size);DC_OF_POINT(init);DC_OF_POINT(root);};TE <TY U>CL PointedSet:virtual PU VirtualPointedSet<U>{PU:U m_b_U;IN PointedSet(CO U& b_u = U());IN CO U& Point()CO NE;IN U& Point() NE;};TE <TY U>CL VirtualNSet:virtual PU UnderlyingSet<U>{PU:virtual U Transfer(CO U& u)= 0;IN U Inverse(CO U& u);};TE <TY U,TY F_U>CL AbstractNSet:virtual PU VirtualNSet<U>{PU:F_U& m_f_U;IN AbstractNSet(F_U& f_U);IN U Transfer(CO U& u);};TE <TY U>CL VirtualMagma:virtual PU UnderlyingSet<U>{PU:virtual U Product(CO U& u0,CO U& u1)= 0;IN U Sum(CO U& u0,CO U& u1);};TE <TY U = ll>CL AdditiveMagma:virtual PU VirtualMagma<U>{PU:IN U Product(CO U& u0,CO U& u1);};TE <TY U = ll>CL MultiplicativeMagma:virtual PU VirtualMagma<U>{PU:IN U Product(CO U& u0,CO U& u1);};TE <TY U,TY M_U>CL AbstractMagma:virtual PU VirtualMagma<U>{PU:M_U& m_m_U;IN AbstractMagma(M_U& m_U);IN U Product(CO U& u0,CO U& u1);};
TE <TY U> IN PointedSet<U>::PointedSet(CO U& b_U):m_b_U(b_U){}TE <TY U> IN CO U& PointedSet<U>::Point()CO NE{RE m_b_U;}TE <TY U> IN U& PointedSet<U>::Point()NE{RE m_b_U;}DF_OF_CPOINT(Unit);DF_OF_CPOINT(Zero);DF_OF_CPOINT(One);DF_OF_CPOINT(Infty);DF_OF_CPOINT(size);DF_OF_POINT(init);DF_OF_POINT(root);TE <TY U,TY F_U> IN AbstractNSet<U,F_U>::AbstractNSet(F_U& f_U):m_f_U(f_U){ST_AS(is_invocable_r_v<U,F_U,U>);}TE <TY U,TY F_U> IN U AbstractNSet<U,F_U>::Transfer(CO U& u){RE m_f_U(u);}TE <TY U> IN U VirtualNSet<U>::Inverse(CO U& u){RE Transfer(u);}TE <TY U,TY M_U> IN AbstractMagma<U,M_U>::AbstractMagma(M_U& m_U):m_m_U(m_U){ST_AS(is_invocable_r_v<U,M_U,U,U>);}TE <TY U> IN U AdditiveMagma<U>::Product(CO U& u0,CO U& u1){RE u0 + u1;}TE <TY U> IN U MultiplicativeMagma<U>::Product(CO U& u0,CO U& u1){RE u0 * u1;}TE <TY U,TY M_U> IN U AbstractMagma<U,M_U>::Product(CO U& u0,CO U& u1){RE m_m_U(u0,u1);}TE <TY U> IN U VirtualMagma<U>::Sum(CO U& u0,CO U& u1){RE Product(u0,u1);}

TE <TY U>CL VirtualMonoid:virtual PU VirtualMagma<U>,virtual PU VirtualPointedSet<U>{};TE <TY U = ll>CL AdditiveMonoid:virtual PU VirtualMonoid<U>,PU AdditiveMagma<U>,PU PointedSet<U>{PU:IN U Product(CO U& u0,CO U& u1);};TE <TY U = ll>CL MultiplicativeMonoid:virtual PU VirtualMonoid<U>,PU MultiplicativeMagma<U>,PU PointedSet<U>{PU:IN MultiplicativeMonoid(CO U& e_U);IN U Product(CO U& u0,CO U& u1);};TE <TY U,TY M_U>CL AbstractMonoid:virtual PU VirtualMonoid<U>,PU AbstractMagma<U,M_U>,PU PointedSet<U>{PU:IN AbstractMonoid(M_U& m_U,CO U& e_U);};
TE <TY U> IN MultiplicativeMonoid<U>::MultiplicativeMonoid(CO U& e_U):PointedSet<U>(e_U){}TE <TY U,TY M_U> IN AbstractMonoid<U,M_U>::AbstractMonoid(M_U& m_U,CO U& e_U):AbstractMagma<U,M_U>(m_U),PointedSet<U>(e_U){}

TE <TY U>CL VirtualGroup:virtual PU VirtualMonoid<U>,virtual PU VirtualPointedSet<U>,virtual PU VirtualNSet<U>{};TE <TY U = ll>CL AdditiveGroup:virtual PU VirtualGroup<U>,PU AdditiveMonoid<U>{PU:IN U Transfer(CO U& u);};TE <TY U,TY M_U,TY I_U>CL AbstractGroup:virtual PU VirtualGroup<U>,PU AbstractMonoid<U,M_U>,PU AbstractNSet<U,I_U>{PU:IN AbstractGroup(M_U& m_U,CO U& e_U,I_U& i_U);IN U Transfer(CO U& u);};TE <TY U,TY M_U,TY I_U> IN AbstractGroup<U,M_U,I_U>::AbstractGroup(M_U& m_U,CO U& e_U,I_U& i_U):AbstractMonoid<U,M_U>(m_U,e_U),AbstractNSet<U,I_U>(i_U){}TE <TY U,TY M_U,TY I_U> IN U AbstractGroup<U,M_U,I_U>::Transfer(CO U& u){RE m_i_U(u);}TE <TY U> IN U AdditiveGroup<U>::Transfer(CO U& u){RE -u;}

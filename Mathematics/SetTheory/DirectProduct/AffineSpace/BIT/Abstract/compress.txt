TE <TY U,TY ABELIAN_GROUP>CL AbstractBIT{PU:int m_SZ;ABELIAN_GROUP m_M;VE<U> m_fenwick;int m_PW;IN AbstractBIT(ABELIAN_GROUP M,CO VE<U>& a = VE<U>());IN VO Set(CRI i,CO U& u);IN VO Set(CO VE<U>& a);IN AbstractBIT<U,ABELIAN_GROUP>& OP+=(CO VE<U>& a);VO Add(CRI i,CO U& u);IN CRI SZ()CO NE;IN U OP[](CRI i)CO;IN U Get(CRI i)CO;IN CO U& LSBSegmentSum(CRI j)CO;U InitialSegmentSum(CRI i_final);IN U IntervalSum(CRI i_start,CRI i_final);int BinarySearch(CO U& u);IN int BinarySearch(CRI i_start,CO U& u);};TE <TY ABELIAN_GROUP> AbstractBIT(ABELIAN_GROUP M)-> AbstractBIT<inner_t<ABELIAN_GROUP>,ABELIAN_GROUP>;
TE <TY U,TY ABELIAN_GROUP> IN AbstractBIT<U,ABELIAN_GROUP>::AbstractBIT(ABELIAN_GROUP M,CO VE<U>& a):m_SZ(a.SZ()),m_M(MO(M)),m_fenwick(m_SZ + 1),m_PW(1){ST_AS(is_same_v<U,inner_t<ABELIAN_GROUP>>);for(int j = 1;j <= m_SZ;j++){U& fenwick_j = m_fenwick[j];int i = j - 1;fenwick_j = a[i];int i_lim = j -(j & -j);WH(i > i_lim){fenwick_j = m_M.Sum(fenwick_j,m_fenwick[i]);i -=(i & -i);}}WH(m_PW < m_SZ){m_PW <<= 1;}}TE <TY U,TY ABELIAN_GROUP> IN VO AbstractBIT<U,ABELIAN_GROUP>::Set(CRI i,CO U& u){Add(i,m_M.Sum(m_M.Inverse(IntervalSum(i,i)),u));}TE <TY U,TY ABELIAN_GROUP> IN VO AbstractBIT<U,ABELIAN_GROUP>::Set(CO VE<U>& a){*TH = AbstractBIT<U,ABELIAN_GROUP>(MO(m_M),a);}TE <TY U,TY ABELIAN_GROUP> IN AbstractBIT<U,ABELIAN_GROUP>& AbstractBIT<U,ABELIAN_GROUP>::OP+=(CO VE<U>& a){AbstractBIT<U,ABELIAN_GROUP> a_copy{m_M,a};AS(m_SZ == a_copy.m_SZ);for(int j = 1;j <= m_SZ;j++){m_fenwick[j]= m_M.Sum(m_fenwick[j],a.m_fenwick[j]);}RE *TH;}TE <TY U,TY ABELIAN_GROUP>VO AbstractBIT<U,ABELIAN_GROUP>::Add(CRI i,CO U& u){int j = i + 1;WH(j <= m_SZ){U& m_fenwick_j = m_fenwick[j];m_fenwick_j = m_M.Sum(m_fenwick_j,u);j +=(j & -j);}RE;}TE <TY U,TY ABELIAN_GROUP> IN CRI AbstractBIT<U,ABELIAN_GROUP>::SZ()CO NE{RE m_SZ;}TE <TY U,TY ABELIAN_GROUP> IN U AbstractBIT<U,ABELIAN_GROUP>::OP[](CRI i)CO{AS(i < m_SZ);RE IntervalSum(i,i);}TE <TY U,TY ABELIAN_GROUP> IN U AbstractBIT<U,ABELIAN_GROUP>::Get(CRI i)CO{RE OP[](i);}TE <TY U,TY ABELIAN_GROUP> IN CO U& AbstractBIT<U,ABELIAN_GROUP>::LSBSegmentSum(CRI j)CO{AS(0 < j && j <= m_SZ);RE m_fenwick[j];}TE <TY U,TY ABELIAN_GROUP>U AbstractBIT<U,ABELIAN_GROUP>::InitialSegmentSum(CRI i_final){U sum = m_M.Zero();int j = min(i_final + 1,m_SZ);WH(j > 0){sum = m_M.Sum(sum,m_fenwick[j]);j -= j & -j;}RE sum;}TE <TY U,TY ABELIAN_GROUP> IN U AbstractBIT<U,ABELIAN_GROUP>::IntervalSum(CRI i_start,CRI i_final){RE m_M.Sum(m_M.Inverse(InitialSegmentSum(i_start - 1)),InitialSegmentSum(i_final));}TE <TY U,TY ABELIAN_GROUP>int AbstractBIT<U,ABELIAN_GROUP>::BinarySearch(CO U& u){int j = 0;int PW = m_PW;U sum = m_M.Zero();U sum_next = sum;WH(PW > 0){int j_next = j | PW;if(j_next < m_SZ){sum_next = m_M.Sum(sum_next,m_fenwick[j_next]);if(sum_next < u){sum = sum_next;j = j_next;}else{sum_next = sum;}}PW >>= 1;}RE j;}TE <TY U,TY ABELIAN_GROUP> IN int AbstractBIT<U,ABELIAN_GROUP>::BinarySearch(CRI i_start,CO U& u){RE max(i_start,m_M.Sum(BinarySearch(InitialSegmentSum(i_start - 1),u)));}

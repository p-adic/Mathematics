TE <TY U,TY GROUP>CL AbstractTwoDimensionalDifferenceSequence{PU:GROUP m_M;int m_SZ_X;int m_SZ_Y;VE<VE<U>> m_a;VE<VE<U>> m_lazy_addition;bool m_updated;IN AbstractTwoDimensionalDifferenceSequence(GROUP M,CRI SZ_X,CRI SZ_Y);IN AbstractTwoDimensionalDifferenceSequence(GROUP M,VE<VE<U>> a ={});TE <TY...Args> IN VO Initialise(Args&&... args);IN VO Set(CRI i_x,CRI i_y,CO U& u);IN CO U& Get(CRI i_x,CRI i_y);IN U& Ref(CRI i_x,CRI i_y);IN VO Add(CRI i_x,CRI i_y,CO U& u);IN VO RectangleAdd(CRI i_start_x,CRI i_start_y,CRI i_final_x,CRI i_final_y,CO U& u);IN AbstractTwoDimensionalDifferenceSequence<U,GROUP>& OP+=(CO VE<U>& a);VO Update();};TE <TY GROUP> AbstractTwoDimensionalDifferenceSequence(GROUP M,CRI SZ_X,CRI SZ_Y)-> AbstractTwoDimensionalDifferenceSequence<inner_t<GROUP>,GROUP>;TE <TY U = ll>CL TwoDimensionalDifferenceSequence:PU AbstractTwoDimensionalDifferenceSequence<U,AdditiveGroup<U>>{PU:TE <TY...Args> IN TwoDimensionalDifferenceSequence(Args&&... args);};
TE <TY U,TY GROUP> IN AbstractTwoDimensionalDifferenceSequence<U,GROUP>::AbstractTwoDimensionalDifferenceSequence(GROUP M,CRI SZ_X,CRI SZ_Y):m_M(MO(M)),m_SZ_X(SZ_X),m_SZ_Y(SZ_Y),m_a(m_SZ_X,VE<U>(m_SZ_Y,m_M.Zero())),m_lazy_addition(m_a),m_updated(false){ST_AS(! is_same_v<U,int>);}TE <TY U,TY GROUP> IN AbstractTwoDimensionalDifferenceSequence<U,GROUP>::AbstractTwoDimensionalDifferenceSequence(GROUP M,VE<VE<U>> a):m_M(MO(M)),m_SZ_X(a.SZ()),m_SZ_Y(m_SZ_X > 0?a.front().SZ():0),m_a(MO(a)),m_lazy_addition(m_SZ_X,VE<U>(m_SZ_Y,m_M.Zero())),m_updated(false){ST_AS(! is_same_v<U,int>);}TE <TY U> TE <TY...Args> IN TwoDimensionalDifferenceSequence<U>::TwoDimensionalDifferenceSequence(Args&&... args):AbstractTwoDimensionalDifferenceSequence<U,AdditiveGroup<U>>(AdditiveGroup<U>(),forward<decay_t<Args>>(args)...){}TE <TY U,TY GROUP> TE <TY...Args> IN VO AbstractTwoDimensionalDifferenceSequence<U,GROUP>::Initialise(Args&&... args){*TH = AbstractTwoDimensionalDifferenceSequence<U,GROUP>(MO(m_M),forward<decay_t<Args>>(args)...);}TE <TY U,TY GROUP> IN VO AbstractTwoDimensionalDifferenceSequence<U,GROUP>::Set(CRI i_x,CRI i_y,CO U& u){Update();m_a[i_x][i_y]= u;}TE <TY U,TY GROUP> IN CO U& AbstractTwoDimensionalDifferenceSequence<U,GROUP>::Get(CRI i_x,CRI i_y){Update();RE m_a[i_x][i_y];}TE <TY U,TY GROUP> IN U& AbstractTwoDimensionalDifferenceSequence<U,GROUP>::Ref(CRI i_x,CRI i_y){RE m_a[i_x][i_y];}TE <TY U,TY GROUP> IN VO AbstractTwoDimensionalDifferenceSequence<U,GROUP>::Add(CRI i_x,CRI i_y,CO U& u){m_a[i_x][i_y]= m_M.Sum(MO(m_a[i_x][i_y]),u);}TE <TY U,TY GROUP> IN VO AbstractTwoDimensionalDifferenceSequence<U,GROUP>::RectangleAdd(CRI i_start_x,CRI i_start_y,CRI i_final_x,CRI i_final_y,CO U& u){m_updated = true;VE<U>& m_lazy_addition_i_start_x = m_lazy_addition[i_start_x];m_lazy_addition_i_start_x[i_start_y]= m_M.Sum(MO(m_lazy_addition_i_start_x[i_start_y]),u);CO int i_final_y_plus = i_final_y + 1;CO U u_inv = m_M.Inverse(u);if(i_final_y_plus < m_SZ_Y){m_lazy_addition_i_start_x[i_final_y_plus]= m_M.Sum(MO(m_lazy_addition_i_start_x[i_final_y_plus]),u_inv);}CO int i_final_x_plus = i_final_x + 1;if(i_final_x_plus < m_SZ_X){VE<U>& m_lazy_addition_i_final_x_plus = m_lazy_addition[i_final_x_plus];m_lazy_addition_i_final_x_plus[i_start_y]= m_M.Sum(MO(m_lazy_addition_i_final_x_plus[i_start_y]),u_inv);if(i_final_y_plus < m_SZ_Y){m_lazy_addition_i_final_x_plus[i_final_y_plus]= m_M.Sum(MO(m_lazy_addition_i_final_x_plus[i_final_y_plus]),u);}}RE;}TE <TY U,TY GROUP> IN AbstractTwoDimensionalDifferenceSequence<U,GROUP>& AbstractTwoDimensionalDifferenceSequence<U,GROUP>::OP+=(CO VE<U>& a){AS(m_SZ_X == int(a.SZ())&& m_SZ_X > 0?m_SZ_Y == int(a[0].SZ()):true);for(int x = 0;x < m_SZ_X;x++){VE<U>& m_a_x = m_a[x];CO VE<U>& a_x = a.m_a[x];for(int y = 0;y < m_SZ_Y;y++){m_a_x[y]= m_M.Sum(MO(m_a_x[y]),a_x[y]);}}RE *TH;}TE <TY U,TY GROUP> VO AbstractTwoDimensionalDifferenceSequence<U,GROUP>::Update(){if(! m_updated){RE;}CO U& zero = m_M.Zero();VE<U> diff(m_SZ_Y,zero);for(int x = 0;x < m_SZ_X;x++){VE<U>& m_a_x = m_a[x];VE<U>& m_lazy_addition_x = m_lazy_addition[x];U temp = zero;for(int y = 0;y < m_SZ_Y;y++){U& m_lazy_addition_xy = m_lazy_addition_x[y];temp = m_M.Sum(MO(temp),m_lazy_addition_xy);diff[y]= m_M.Sum(MO(diff[y]),temp);m_a_x[y]= m_M.Sum(MO(m_a_x[y]),diff[y]);m_lazy_addition_xy = zero;}}m_updated = false;RE;}

